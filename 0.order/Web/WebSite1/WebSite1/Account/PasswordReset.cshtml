@* 번들을 사용하는 경우 이 섹션 제거 *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "암호 다시 설정";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // 확인 설정
    Validation.RequireField("newPassword", "새 암호는 필수 필드입니다.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("newPassword", "새 암호와 암호 확인이 일치하지 않습니다."));
    Validation.RequireField("passwordResetToken", "암호 다시 설정 토큰은 필수 필드입니다.");
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "새 암호는 6자 이상이어야 합니다."));

    if (IsPost && Validation.IsValid()) {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword)) {
            isSuccess = true;
        } else {
            ModelState.AddError("passwordResetToken", "암호 다시 설정 토큰이 잘못되었습니다.");
            tokenExpired = true;
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>아래 양식을 사용하여 암호를 다시 설정하십시오.</h2>
</hgroup>

@if (!WebMail.SmtpServer.IsEmpty()) {
    if (!Validation.IsValid()) {
        <p class="validation-summary-errors">
            @if (tokenExpired) {
                <text>암호 다시 설정 토큰이 잘못되었거나 만료되었습니다. 새 암호를 생성하려면 <a href="~/Account/ForgotPassword">암호를 잊으셨나요 페이지로</a> 
                이동하십시오.</text>
            } else {
                <text>암호를 다시 설정할 수 없습니다. 오류를 수정한 후 다시 시도하십시오.</text>
            }
        </p>
    }

    if (isSuccess) {
        <p class="message-success">
            암호가 변경되었습니다! 로그인하려면 <a href="~/Account/Login" title="Log in">여기</a>를 클릭하십시오.
        </p>
    }

    <form method="post">
        @AntiForgery.GetHtml()
        <fieldset>
            <legend>암호 변경 양식</legend>
            <ol>
                <li class="new-password">
                    <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) {<text>class="error-label"</text>}>새 암호</label> 
                    <input type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                    @Html.ValidationMessage("newPassword")
                </li>
                <li class="confirm-password">
                    <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>암호 확인</label> 
                    <input type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                    @Html.ValidationMessage("confirmPassword")
                </li>
                <li class="reset-token">
                    <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) {<text>class="error-label"</text>}>Password reset token</label> 
                    <input type="text" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                    @Html.ValidationMessage("resetToken")
                </li>
            </ol>
            <input type="submit" value="암호 다시 설정" disabled="@isSuccess"/>
        </fieldset>
    </form>
} else {
    <p class="message-info">
        SMTP 서버가 올바르게 구성되지 않았기 때문에 이 웹 사이트에서 
        암호 복구가 지원되지 않습니다. 암호를 다시 설정하려면 사이트 소유자에게 
        문의하십시오.
    </p>
}
