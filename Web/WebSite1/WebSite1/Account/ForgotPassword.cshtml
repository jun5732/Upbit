@* 번들을 사용하는 경우 이 섹션 제거 *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "암호를 잊은 경우";

    bool passwordSent = false;
    var resetToken = "";
    var email = Request.Form["email"] ?? Request.QueryString["email"];

    // 확인 설정
    Validation.RequireField("email", "전자 메일 주소는 필수 필드입니다.");

    if (IsPost) {
        AntiForgery.Validate();
        // 전자 메일 확인
        bool isValid = true;
        if (Validation.IsValid()) {
            if (WebSecurity.GetUserId(email) > -1 && WebSecurity.IsConfirmed(email)) {
                resetToken = WebSecurity.GeneratePasswordResetToken(email); // 토큰의 만료 날짜를 지정하십시오(옵션).
            } else {
                passwordSent = true; // 사용자가 존재하지 않는다는 사실을 공개하지 않습니다.
                isValid = false;
            }
        }
        if (isValid) {
            var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
            var resetUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/PasswordReset?resetToken=" + HttpUtility.UrlEncode(resetToken));
            WebMail.Send(
                to: email,
                subject: "암호를 다시 설정하십시오.", 
                body: "이 암호 다시 설정 토큰을 사용해 암호를 다시 설정하십시오. 토큰: " + resetToken + @"입니다. <a href=""" + HttpUtility.HtmlAttributeEncode(resetUrl) + @""">" + resetUrl + "</a>에서 암호를 다시 설정하십시오."
            );
            passwordSent = true;
        }
    }
}

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>아래 양식을 사용하여 암호를 다시 설정하십시오.</h2>
</hgroup>

@if (!WebMail.SmtpServer.IsEmpty()) {
    <p>
        사용자 계정과 연결된 전자 메일 주소로 암호 다시 설정 지침을 전송합니다.
    </p>

    if (passwordSent) {
        <p class="message-success">
            지정된 전자 메일 주소로 암호 다시 설정 지침이 전송되었습니다.
        </p>
    }

    <form method="post">
        @AntiForgery.GetHtml()
        @Html.ValidationSummary(excludeFieldErrors: true)

        <fieldset>
            <legend>암호 다시 설정 지침 양식</legend>
            <ol>
                <li class="email">
                    <label for="email" @if (!ModelState.IsValidField("email")) {<text>class="error-label"</text>}>전자 메일 주소</label>
                    <input type="text" id="email" name="email" value="@email" disabled="@passwordSent" @Validation.For("email") />
                    @Html.ValidationMessage("email")
                </li>
            </ol>
            <p class="form-actions">
                <input type="submit" value="지침 전송" disabled="@passwordSent" />
            </p>
        </fieldset>
    </form>
} else {
   <p class="message-info">
       SMTP 서버가 올바르게 구성되지 않았기 때문에 이 웹 사이트에서 
       암호 복구가 지원되지 않습니다. 암호를 다시 설정하려면 사이트 소유자에게 
       문의하십시오.
   </p>
}